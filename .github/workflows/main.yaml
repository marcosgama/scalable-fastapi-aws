name: Continuous Integration Pipeline

on: [push]

env:
  IMAGE: ghcr.io/$(echo $GITHUB_REPOSITORY | tr '[A-Z]' '[a-z]')

jobs:

  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: main
      - name: Log in to GitHub Packages
        run: echo ${GITHUB_TOKEN} | docker login -u ${GITHUB_ACTOR} --password-stdin ghcr.io
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Pull image
        run: |
          docker pull ${{ env.IMAGE }}:latest || true
      - name: Build image
        run: |
          docker build \
            --cache-from ${{ env.IMAGE }}:latest \
            --tag ${{ env.IMAGE }}:latest \
            --file ./ci_cd/python/Dockerfile \
            "."
      - name: Push image
        run: |
          docker push ${{ env.IMAGE }}:latest

  test:
    name: Test Docker Image
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        ref: main
    - name: Log in to GitHub Packages
      run: echo ${GITHUB_TOKEN} | docker login -u ${GITHUB_ACTOR} --password-stdin ghcr.io
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Pull image
      run: |
        docker pull ${{ env.IMAGE }}:latest || true
    - name: Build image
      run: |
        docker build \
        --cache-from ${{ env.IMAGE }}:latest \
        --tag ${{ env.IMAGE }}:latest \
        --file ./ci_cd/python/Dockerfile \
        "."
    - name: Pytest
      run: docker exec scalable-fastapi-aws python -m pytest .
    - name: Flake8
      run: docker exec scalable-fastapi-aws python -m flake8 .
    - name: Black
      run: docker exec scalable-fastapi-aws python -m black . --check
    - name: isort
      run: docker exec scalable-fastapi-aws python -m isort . --check-only