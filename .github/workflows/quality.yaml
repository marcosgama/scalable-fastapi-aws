name: Lint and Test

on:
    pull_request:
        types: 
            - opened
            - edited
        branches: 
            - main
        paths:
            - 'services/talk_booking/**/*'
    push:
        branches:
            - main
        paths:
            - 'services/talk_booking/**/*'

env:
    IMAGE: ghcr.io/$(echo $GITHUB_REPOSITORY | tr '[A-Z]' '[a-z]')/scalable-fastapi-aws

jobs: 
    lint:
        name: Test Docker Image
        runs-on: ubuntu-latest
        needs: build
        steps:
        - name: Checkout
        uses: actions/checkout@v3
        with:
            ref: main
        - name: Log in to GitHub Packages
        run: echo ${GITHUB_TOKEN} | docker login -u ${GITHUB_ACTOR} --password-stdin ghcr.io
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        - name: Pull image
        run: |
            docker pull ${{ env.IMAGE }}:latest || true
        - name: Build image
        run: |
            docker build \
            --cache-from ${{ env.IMAGE }}:latest \
            --tag ${{ env.IMAGE }}:latest \
            --file ./ci_cd/python/Dockerfile \
            "."
        - name: Run container
        run: |
            docker run \
            - d \
            --name scalable-fastapi-aws \
            ${{ env.IMAGE }}:latest
        - name: Flake8
        run: docker exec scalable-fastapi-aws poetry flake8 .
        - name: Black
        run: docker exec scalable-fastapi-aws poetry black . --check
        - name: isort
        run: docker exec scalable-fastapi-aws poetry isort . --check-only --profile black

    test:
        name: Test Docker Image
        runs-on: ubuntu-latest
        needs: build
        steps:
        - name: Checkout
        uses: actions/checkout@v3
        with:
            ref: main
        - name: Log in to GitHub Packages
        run: echo ${GITHUB_TOKEN} | docker login -u ${GITHUB_ACTOR} --password-stdin ghcr.io
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        - name: Pull image
        run: |
            docker pull ${{ env.IMAGE }}:latest || true
        - name: Build image
        run: |
            docker build \
            --cache-from ${{ env.IMAGE }}:latest \
            --tag ${{ env.IMAGE }}:latest \
            --file ./ci_cd/python/Dockerfile \
            "."
        - name: Run container
        run: |
            docker run \
            - d \
            --name scalable-fastapi-aws \
            ${{ env.IMAGE }}:latest
        - name: Pytest
        run: docker exec scalable-fastapi-aws poetry pytest --cov=./ --cov-report=xml tests/unit tests/integration
        - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
          env: CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
